
// function sumInput() {
//     let num = [];
//     while (true) {
//         let v = prompt ('enter number', '')
//         if (v === '' || v === null || !isFinite(v)) {
//             break;
//         }
//         num.push(+v);
//     }
//     let sum = 0;
//     for (let number of num) {
//         sum += number;
//     }
//     return sum;
// }
// console.log(sumInput());

// function uniq_fast(a) {
//     let seen = {};
//     let out = [];
//     let len = a.length;
//     let j = 0;
//     for(let i = 0; i < len; i += 1) {
//          let item = a[i];
//          if(seen[item] !== 1) {
//                seen[item] = 1;
//                out.push(item);
//          }
//     }
//     return out;
// }
// console.log(uniq_fast([1, 2, 1, 4, 5, 3, 4]))







// ### NORMAL level

// #### Task 1 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const colors = ['red', 'green', 'blue']
// ```

// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –¥–ª–∏–Ω—É.
// const colors = ['red', 'green', 'blue'];
// console.log(colors.length);

// #### Task 2 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const animals = ['monkey', 'dog', 'cat']
// ```

// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –¥–ª–∏–Ω–Ω—ã.
// const animals = ['monkey', 'dog', 'cat'];
// console.log(animals.slice(-1));

// #### Task 3 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const numbers = [5, 43, 63, 23, 90]
// ```

// –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

// > –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏.
// const numbers = [5, 43, 63, 23, 90];
// do {
//     numbers.pop()
// } while (numbers.length > 0);
// console.log(numbers);
// -----------
// const numbers = [5, 43, 63, 23, 90];
// numbers.splice(0, 5);
// console.log(numbers);
// --------------
// const numbers = [5, 43, 63, 23, 90];
// delete numbers[0];
// delete numbers[1];
// delete numbers[2];
// delete numbers[3];
// delete numbers[4];
// console.log(numbers);


// #### Task 4 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const students = ['Polina', 'Dasha', 'Masha']
// ```

// + –£–¥–∞–ª–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ `Borya`.
// + –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ `Andrey`.
// + –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.
// const students = ['Polina', 'Dasha', 'Masha'];
// students.splice(2, 1, 'Borya');
// students.splice(0, 1, 'Andrey');
// console.log(students);

// #### Task 5 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const cats = ['Gachito', 'Tom', 'Batman']
// ```

// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞. –°–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª **`for`**, –∑–∞—Ç–µ–º **`for of`**.

// const cats = ['Gachito', 'Tom', 'Batman'];
// for (let i = 0; i < cats.length; i += 1) {
// 	console.log(cats[i]);
// }

// const cats = ['Gachito', 'Tom', 'Batman'];
// for (let elem of cats) {
// 	console.log(elem);
// }

// #### Task 6 üñ•

// ```javascript
//     const evenNumbers = [2, 4, 6, 8, 10]
//     const oddNumbers = [1, 3, 5, 7, 9]
// ```

// + –°–æ–µ–¥–∏–Ω–∏—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª –≤ –æ–¥–∏–Ω.
// + –í –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å —á–∏—Å–ª–∞ **`8`**

// const evenNumbers = [2, 4, 6, 8, 10];
// const oddNumbers = [1, 3, 5, 7, 9];
// const numbers = evenNumbers.concat(oddNumbers);
// console.log(numbers);
// console.log(numbers.indexOf(8));

// #### Task 7 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const binary = [0, 0, 0, 0]
// ```
 
// + –ù–∞—à –±–∏–Ω–∞—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ–ø–æ–ª–Ω—ã–π, –≤ –Ω–µ–º —è–≤–Ω–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –µ–¥–∏–Ω–∏—Ü.
// + –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É.

// > [0, 0, 0, 0] -> '0101010'

// const binary = [0, 0, 0, 0];
// const bin = binary.join(1);
// console.log(bin);


// ### ADVANCED level

// > –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª—ã **`for`** –∏–ª–∏ **`for of`**

// #### Task 1 üë®‚Äçüè´

// –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ª–æ–≤–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.
// const str = prompt ('enter smth', '');
// function ifPoly(str){
//     str = str.toLowerCase();
//     return str === str.split('').reverse().join('');
// }
// console.log(ifPoly(str));

// #### Task 2 üë®‚Äçüè´

// ```javascript
//     const matrix = [
//         [12, 98, 78, 65, 23],
//         [54, 76, 98, 43, 65],
//         [13, 324, 65, 312],
//         [9092, 22, 45, 90000],
//     ]
// ```

// > –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–µ–ª –≤ –º–Ω–æ–≥–æ–º–µ—Ä–Ω–æ–º –º–∞—Å—Å–∏–≤–µ.
// const matrix = [
//     [12, 98, 78, 65, 23],
//     [54, 76, 98, 43, 65],
//     [13, 324, 65, 312],
//     [9092, 22, 45, 90000],
// ]
// let sum = 0;
// let countNumb = 0; 
// for ( let i = 0; i < matrix.length; i += 1) {
//     for (let j = 0; j < matrix [i].length; j += 1) {
//         sum += matrix[i][j];
//         countNumb += 1;
//         console.log(i, j, sum, countNumb)
//     }
// }
// console.log(sum / countNumb);

// #### Task 3 üë®‚Äçüè´

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//    const mixedNumbers = [-14, 24, -89, 43, 0 , -1, 412, 4]
// ```

// –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞, –≤ –æ–¥–∏–Ω –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤—Å–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –≤–∫–ª—é—á–∞—è 0, –≤ –¥—Ä—É–≥–æ–π –≤—Å–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ. –û–±–∞ –º–∞—Å—Å–∏–≤–∞ –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å. 

// const mixedNumbers = [-14, 24, -89, 43, 0 , -1, 412, 4];
// mixedNumbers.sort();
// const a = mixedNumbers.slice(0, 3);
// const b = mixedNumbers.slice(3, 8);
// console.log(mixedNumbers, a, b); // easy one
//------------------------
// const mixedNumbers = [-14, 24, -89, 43, 0 , -1, 412, 4];
// const a = [];
// const b = [];
// for (let i = 0; i < mixedNumbers.length; i += 1) {
//     if (mixedNumbers[i] < 0) {
//         a.push(mixedNumbers[i]);
//     } else {
//         b.push(mixedNumbers[i]);
//     }
// }
// console.log(a, b); // difficult one


// #### Task 4 üë®‚Äçüè´

// –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ –¥–ª–∏–Ω–Ω–æ–π –Ω–µ –º–µ–Ω–µ–µ 5, –∏–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª. –î–∞–ª–µ–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –∫–æ—Ç–æ—Ä—ã–π –±–µ—Ä–µ—Ç –≤—Å–µ —á–∏—Å–ª–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, 
//–≤–æ–∑–≤–æ–¥–∏—Ç –∏—Ö –≤ –∫—É–± –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤. –í –∫–æ–Ω—Ü–µ –≤—ã–≤–µ—Å—Ç–∏ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å.

// const a = [];
// const cubedA = [];
// function getRandomInt() {
//     return Math.floor(Math.random() * 10) ;
// }
// for (let i = 0; i < 5; i += 1) {
//     a.push(getRandomInt());
// }
// console.log(a);
// for (let j = 0; j < a.length; j += 1) {
//     cubedA.push(Math.pow(a[j], 3));
// }
// console.log(cubedA);

